<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>azure functions on Hello_world</title>
    <link>https://jamied.me/tags/azure-functions/</link>
    <description>Recent content in azure functions on Hello_world</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sun, 16 Aug 2020 19:54:39 +0100</lastBuildDate>
    
	<atom:link href="https://jamied.me/tags/azure-functions/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>GitHub Webhooks With Azure Functions and SmartThings</title>
      <link>https://jamied.me/posts/2020/08/github-webhooks-with-azure-functions-and-smartthings/</link>
      <pubDate>Sun, 16 Aug 2020 19:54:39 +0100</pubDate>
      
      <guid>https://jamied.me/posts/2020/08/github-webhooks-with-azure-functions-and-smartthings/</guid>
      <description>Ever since I saw Martin WoodWard&amp;rsquo;s Brian the Build Bunny for Team Foundation Server over 12 years ago, I&amp;rsquo;ve been fascinated by creating signals for continuous integration builds. Following on from my last post, where I walk through creating and setting up a GitHub Webhook with Azure Functions, the next logical step was to integrate this to SmartThings for complete home automation.
SmartThings has a new REST API, which I&amp;rsquo;ve created and released a SmartThings NET library, which gives you the ability to interrogate your SmartThings home automation ecosystem entirely using dotnet.</description>
    </item>
    
    <item>
      <title>GitHub Webhooks With Azure Functions</title>
      <link>https://jamied.me/posts/2020/07/github-webhooks-with-azure-functions/</link>
      <pubDate>Tue, 21 Jul 2020 21:50:17 +0100</pubDate>
      
      <guid>https://jamied.me/posts/2020/07/github-webhooks-with-azure-functions/</guid>
      <description>Recently I wanted to build a GitHub webhook using C# Azure Functions, but could only find an example template using Node.js. Here, I set out to create a webhook to check the overall status of a build. This is something I was doing around 10 years ago with Team Foundation Server, so thought it would be fun to get this up and running with GitHub Actions.
Check Suites Looking at the available webhook events there wasn&amp;rsquo;t an obvious event I could subscribe to get what I wanted.</description>
    </item>
    
    <item>
      <title>Direct Line Speech</title>
      <link>https://jamied.me/posts/2019/10/direct-line-speech/</link>
      <pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jamied.me/posts/2019/10/direct-line-speech/</guid>
      <description>Anne Uumellmahaye voice bot using Azure Bot Service: Direct Line Speech Recreating Anne Uumellmahaye using AI from the film The Man with Two Brains. Spooktacular fun with the Azure Bot Service using the Direct Line Speech channel and the Microsoft Cognitive Speech SDK.
Architecture Technologies used  Azure Bot Service and Direct Line Channel Bot Framework Microsoft Cognitive Services  Dispatcher LUIS QnA Maker Speech SDK  Azure Functions Spotify API UWP Raspberry Pi running Windows 10 IoT Halloween head  Who&amp;rsquo;s Freddy?</description>
    </item>
    
  </channel>
</rss>